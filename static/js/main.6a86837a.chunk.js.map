{"version":3,"sources":["api/api.js","redux/dialogs-reducer.js","components/Users/users.module.css","assets/images/user.png","assets/images/preloader.svg","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.jsx","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","initialState","messages","id","message","dialogs","name","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","News","props","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","backgroundColor","preloader","value","maxLengthCreator","maxLenght","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","stateCopy","postId"],"mappings":"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","file":"static/js/main.6a86837a.chunk.js","sourcesContent":["import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        \"API-KEY\": \"81914c6f-8034-4676-8604-e8d84bfeb30c\"\n    }\n});\n\nexport const usersAPI = {\n    getUsers (currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`,\n        ).then(response => {\n            return response.data;\n        });\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId){\n        console.warn('Obsolete method. Please profileAPI object.')\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId){\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status });\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`, { email, password, rememberMe });\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n}\n\n","const SEND_MESSAGE = 'SEND-MESSAGE';\n\nlet initialState = {\n    messages: [\n        {id: 1, message: 'Hi'},\n        {id: 2, message: 'How are you?'},\n        {id: 3, message: 'Yo'},\n        {id: 4, message: 'Yo'},\n        {id: 5, message: 'Yo'}\n    ],\n    dialogs: [\n        {id: 1, name: 'Andrew'},\n        {id: 2, name: 'Paul'},\n        {id: 3, name: 'Peter'},\n        {id: 4, name: 'John'},\n        {id: 5, name: 'Jameson'},\n        {id: 6, name: 'Patrick'}\n    ],\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SEND_MESSAGE:\n            let body = action.newMessageBody;\n            return {\n                ...state,\n                messages: [...state.messages, {id: 6, message: body}]\n            };\n        default:\n            return state;\n    }\n}\n\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\n\n\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1_En6\"};","module.exports = __webpack_public_path__ + \"static/media/user.93a57c9f.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.f04fd315.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Navbar = () => {\n    return (\n        <navbar className='navbar'>\n            <nav className={s.nav}>\n                <div className={s.item}>\n                    <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\n                </div>\n                {/*<div className={`${s.item} ${s.active}`}>*/}\n                <div className={s.item}>\n                    <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\n                </div>\n            </nav>\n        </navbar>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport s from './News.module.css';\n\nconst News = (props) => {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\n\nexport default News;","import React from 'react';\nimport s from './Music.module.css';\n\nconst Music = (props) => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;","import React from 'react';\nimport s from './Settings.module.css';\n\nconst Settings = (props) => {\n    return (\n        <div>\n            Set\n        </div>\n    )\n}\n\nexport default Settings;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(u => {\n        if (u[objPropName] === itemId) {\n            return {...u, ...newObjProps}\n        }\n        return u;\n    })\n}\n","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGOLE_IS_FETCHING = 'TOGOLE_IS_FETCHING';\nconst TOGOLE_IS_FOLLOWING_PROGRESS = 'TOGOLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\n            }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.count}\n        }\n        case TOGOLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGOLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\nexport const toggleIsFetching = (isFetching) => ({type: TOGOLE_IS_FETCHING, isFetching})\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: TOGOLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n})\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize)\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId)\n    if (response.data.resultCode == 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n}\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n    }\n}\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n    }\n}\n\n\nexport default usersReducer;","import React, {useState} from 'react';\nimport styles from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n    return <div className={styles.paginator}>\n        {portionNumber > 1 &&\n        <button onClick={() => {\n            setPortionNumber(portionNumber - 1)\n        }}>PREV</button>}\n\n        {pages\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n            .map((p) => {\n                return <span className={cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber)}\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        {portionCount > portionNumber &&\n        <button onClick={() => {\n            setPortionNumber(portionNumber + 1)\n        }}>NEXT</button>}\n    </div>\n}\n\nexport default Paginator","import React from 'react';\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport {NavLink} from \"react-router-dom\";\nimport Paginator from \"../common/Paginator/Paginator\";\n\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n    return (\n        <div>\n                <span>\n                    <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto}/>\n                    </NavLink>\n                    <div>\n                        {\n                            user.followed\n                                ? <button disabled={followingInProgress\n                                    .some(id => id === user.id)}\n                                          onClick={() => {\n                                              unfollow(user.id)\n                                          }}>\n                                    Unfollow\n                                </button>\n                                : <button disabled={followingInProgress.some(id => id === user.id)}\n                                          onClick={() => {\n                                              follow(user.id)\n                                          }}>\n                                    Follow\n                                </button>\n                        }\n                    </div>\n                </span>\n                <span>\n                    <span>\n                        <div>{user.name}</div>\n                        <div>{user.status}</div>\n                    </span>\n                    <span>\n                        <div>{\"user.location.country\"}</div>\n                        <div>{\"user.location.city\"}</div>\n                    </span>\n                </span>\n            </div>)\n}\n\nexport default User","import React from 'react';\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\n\n\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\n    return <div>\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount} pageSize={pageSize}/>\n        <div>\n        {\n            users.map(u => <User user={u}\n                                 followingInProgress={props.followingInProgress}\n                                 key={u.id}\n                                 unfollow={props.unfollow}\n                                 follow={props.follow}/>\n                )\n        }\n        </div>\n    </div>\n}\n\nexport default Users","import {createSelector} from \"reselect\";\n\nconst getUsersSelector = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getUsers = createSelector(getUsersSelector,\n    (users) => {\n        return users.filter(u => true);\n    })\n\nexport const getTempSavedUsers = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n}\n\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n}\n\nexport const countSomethingDifficult = (state) => {\n    return state.usersPage.followingInProgress;\n}","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    follow,\n    setCurrentPage,\n    unfollow,\n    toggleFollowingProgress,\n    requestUsers\n} from \"../../redux/users-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getPageSize,\n    getTotalUsersCount,\n    getIsFetching,\n    getFollowingInProgress,\n    getUsers\n} from \"../../redux/users-selectors\";\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.getUsers(currentPage, pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        const {pageSize} = this.props;\n        this.props.getUsers(pageNumber, pageSize);\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   followingInProgress={this.props.followingInProgress}\n\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps,{follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers })\n)(UsersContainer)","import React from 'react';\nimport s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n    return (\n        <header className={s.header}>\n            <img\n                src='https://upload.wikimedia.org/wikipedia/commons/thumb/7/7d/Croatian_Special_Police_Logo.svg/724px-Croatian_Special_Police_Logo.svg.png'></img>\n            <div className={s.loginBlock}>\n                { props.isAuth\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\n                    : <NavLink to={'/login'}>Login</NavLink> }\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA, payload:\n        {userId, email, login, isAuth}\n});\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe)\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", {_error: message}));\n    }\n}\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout()\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n}\n\nexport default authReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\n\nclass HeaderContainer extends React.Component {\n\n    render () {\n        return <Header {...this.props} />\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n});\n\nexport default connect(mapStateToProps, {logout}) (HeaderContainer);","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\";\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                {createField(\"Email\", \"email\", [required], Input)}\n                {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n                {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\n                {error && <div className={style.formSummaryError}>\n                    {error}\n                </div>}\n            </div>\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\nexport default connect(mapStateToProps, {login})(Login);","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n                }\n        default:\n            return state;\n    }\n}\n\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n    Promise.all([promise])\n        .then(() => {\n        dispatch(initializedSuccess());\n    });\n}\n\nexport default appReducer;","let initialState = {\n\n}\n\nconst sidebarReducer = (state = initialState, action) => {\n\n    return state;\n}\n\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport { reducer as formReducer } from 'redux-form';\nimport appReducer from \"./app-reducer\";\n\nimport thunkMiddleware from \"redux-thunk\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\nwindow.__store__ = store;\n\nexport default store;","import React from \"react\";\nimport Preloader from \"../components/common/Preloader/Preloader\";\n\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <React.Suspense fallback={<Preloader />} >\n            <Component {...props} />\n        </React.Suspense>\n    };\n}","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader />\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    {/*<Route path='/dialogs' component={Dialogs}/>*/}\n                    {/*<Route path='/profile' component={Profile}/>*/}\n                    {/*<Route path='/news' component={News}/>*/}\n                    {/*<Route path='/music' component={Music}/>*/}\n                    {/*<Route path='/settings' component={Settings}/>*/}\n\n                    <Route path='/dialogs'\n                           render={withSuspense(DialogsContainer)}/>\n                    <Route path='/profile/:userId?'\n                           render={withSuspense(ProfileContainer)} />\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n                    <Route path='/login'\n                           render={() => <LoginPage/>}/>\n\n                </div>\n                <Route path='/news' render={() => <News/>}/>\n                <Route path='/music' render={() => <Music/>}/>\n                <Route path='/settings' render={() => <Settings/>}/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp})) (App);\n\nconst SamuraiJSApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default SamuraiJSApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport SamuraiJSApp from \"./App\";\n\n    ReactDOM.render(\n        <SamuraiJSApp/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import React from \"react\";\nimport styles from \"./FormsControls.module.css\";\nimport {required} from \"../../../utils/validators/validators\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder} name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        /> {text}\n    </div>\n)","import React from 'react';\nimport preloader from \"../../../assets/images/preloader.svg\";\n\n\nlet Preloader = (props) => {\n    return <div style={ { backgroundColor: 'white'} }>\n        <img src={preloader} />\n    </div>\n}\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","export const required = value => {\n    if (value) return undefined;\n    return \"Field is required\";\n}\n\nexport const maxLengthCreator = (maxLenght) => (value) => {\n    if (value.length > maxLenght) return `Max length is ${maxLenght} symbols`;\n    return undefined;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__18P4_\",\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"selectedPage\":\"Paginator_selectedPage__3SIki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import {profileAPI, usersAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\n\nlet initialState = {\n    posts: [\n        {id: 1, post: 'Hi, how are you?', likesCount: 12},\n        {id: 2, post: 'It\\'s my first post', likesCount: 11},\n        {id: 3, post: 'Blabla', likesCount: 13},\n        {id: 4, post: 'Reunion', likesCount: 14}\n    ],\n    profile: null,\n    status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                post: action.newPostText,\n                likesCount: 0\n            };\n            let stateCopy = {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: \"\"\n            };\n            return stateCopy;\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            };\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile};\n        }\n        case DELETE_POST:\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\nexport const setStatus = (status) => ({type: SET_STATUS, status})\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\nexport const getUserProfile = (userId) => async (dispatch) => {\n    const response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response.data));\n}\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId)\n    dispatch(setStatus(response.data));\n}\n\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n}\n\nexport default profileReducer;"],"sourceRoot":""}