{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","message","likesCount","MyPosts","React","memo","postsElements","posts","reverse","map","p","createRef","postsBlock","onSubmit","values","addPost","newPostText","maxLenght10","maxLengthCreator","AddNewPostForm","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","reduxForm","form","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.7cefaa19.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n    return (\n        <div className='posts'>\n            <div className={s.item}>\n                <img\n                    src='https://upload.wikimedia.org/wikipedia/commons/thumb/7/7d/Croatian_Special_Police_Logo.svg/724px-Croatian_Special_Police_Logo.svg.png'></img>\n                { props.message }\n                <div>\n                    <span>{props.likesCount}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\n\nconst MyPosts = React.memo(props => {\n\n    let postsElements = [...props.posts]\n        .reverse()\n        .map(p => <Post message={p.message} likesCount={p.likesCount}/>);\n\n    let newPostElement = React.createRef();\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    }\n\n    return (\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n            <AddNewPostForm onSubmit={onAddPost}/>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n});\n\nconst maxLenght10 = maxLengthCreator(10);\n\nlet AddNewPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\n                       validate={[required, maxLenght10]}/>\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nAddNewPostForm = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\n\nexport default MyPosts;","import React from 'react';\nimport s from './ProfileInfo.module.css';\n\nclass ProfileStatus extends React.Component {\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    activateEditMode = () => {\n        this.setState({\n            editMode: true\n        });\n    }\n    deactivateEditMode = () => {\n        this.setState( {\n            editMode: false\n        });\n        this.props.updateStatus(this.state.status);\n    }\n    onStatusChange = (e) => {\n        this.setState({\n            status: e.currentTarget.value\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.state.editMode &&\n                    <div>\n                        <span onDoubleClick={ this.activateEditMode }>{this.props.status || \"-------\"}</span>\n                    </div>\n                }\n                {this.state.editMode &&\n                    <div>\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deactivateEditMode.bind(this) } value={this.state.status}/>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\n\nexport default ProfileStatus;","import React, {useState, useEffect} from 'react';\nimport s from './ProfileInfo.module.css';\n\n\nconst ProfileStatusWithHooks = (props) => {\n        let [editMode, setEditMode] = useState(false);\n        let [status, setStatus] = useState(props.status);\n\n        useEffect( () => {\n            setStatus(props.status);\n        }, [props.status]);\n\n        const activateEditMode = () => {\n            setEditMode(true);\n        };\n\n        const deactivateEditMode = () => {\n            setEditMode(false);\n            props.updateStatus(status);\n        };\n\n        const onStatusChange = (e) => {\n            setStatus(e.currentTarget.value);\n        };\n\n        return (\n            <div>\n                { !editMode &&\n                <div>\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-------\"}</span>\n                </div>\n                }\n                {editMode &&\n                <div>\n                    <input onChange={onStatusChange} autoFocus={true}\n                           onBlur={deactivateEditMode}\n                           value={status}/>\n                </div>\n                }\n            </div>\n        )\n    };\n\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatus\"\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n    if (!profile) {\n        return <Preloader />\n    }\n    return (\n        <div>\n            <div>\n                <img\n                    src='https://proxy.duckduckgo.com/iu/?u=http%3A%2F%2Fstatic4.businessinsider.com%2Fimage%2F54d20445dd08955a148b456e-960%2Fpanda-china-strong.jpg&f=1&nofb=1'></img>\n            </div>\n            <div className={s.descriptionBlock}>\n                <img src={profile.photos.large} />\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n}\n\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport s from './Profile.module.css';\nimport MyPosts from \"./MyPosts/MyPosts\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostsContainer/>\n        </div>\n    )\n}\n\nexport default Profile;\n","import React from 'react';\nimport Profile from \"./Profile\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n        return (\n            <div>\n                <Profile {...this.props}\n                         profile={this.props.profile}\n                         status={this.props.status}\n                         updateStatus={this.props.updateStatus}/>\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n});\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter,\n    //withAuthRedirect\n)(ProfileContainer);\n\n"],"sourceRoot":""}