{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","AddMessageForm","state","dialogsPage","newPostElement","React","createRef","dialogsElements","dialogs","map","messagesElements","messages","newMessageBody","isAuth","dialogsItems","values","sendMessage","onClick","text","current","value","alert","compose","connect","auth","dispatch","sendMessageCreator","Component","RedirectComponent","this"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,uGCanKC,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCAvBC,EANC,SAACT,GACb,OACI,yBAAKG,UAAWC,IAAEC,QAASL,EAAMU,U,iCCAnCC,EAAcC,YAAiB,IAmBtBC,cAAU,CAACC,KAAM,wBAAjBD,EAjBQ,SAACb,GACpB,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBH,KAAK,iBACLc,YAAY,wBAEvB,6BACI,6CCyCDC,GAFaV,YAAU,CAACC,KAAM,wBAAjBD,CAA0CW,GA9CtD,SAACxB,GAEb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAiBC,IAAMC,YASvBC,EAAkBL,EAAMM,QACvBC,KAAI,SAAA3B,GAAM,OAAI,kBAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMN,GAAIG,EAAOH,QAGzD+B,EAAmBR,EAAMS,SACxBF,KAAI,SAAAtB,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,aAEzBe,EAAMU,eAM3B,OAAKnC,EAAMoC,OAGP,6BACI,yBAAKjC,UAAWC,IAAE2B,SACd,yBAAK5B,UAAWC,IAAEiC,cACbP,GAEL,yBAAK3B,UAAWC,IAAEM,SACd,6BAAMuB,IAEV,kBAAC,EAAD,CAAgBlB,SAfR,SAACuB,GACjBtC,EAAMuC,YAAYD,EAAOH,oBAgBrB,6BACI,4BAAQK,QAlCN,WAEV,IAAIC,EAAOd,EAAee,QAAQC,MAClCC,MAAMH,KA+BE,cAdc,kBAAC,IAAD,CAAUlC,GAAI,a,uDCd7BsC,sBACXC,aAfkB,SAACrB,GACnB,MAAO,CACHC,YAAaD,EAAMC,YACnBU,OAAQX,EAAMsB,KAAKX,WAGF,SAACY,GACtB,MAAO,CACHT,YAAa,SAACJ,GACVa,EAASC,YAAmBd,UCbR,SAACe,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKpD,MAAMoC,OAET,kBAACc,EAAcE,KAAKpD,OAFI,kBAAC,IAAD,CAAUO,GAAG,eAHT,GACXqB,IAAMsB,WAatC,OAFqCJ,aAJJ,SAACrB,GAAD,MAAY,CACzCW,OAAQX,EAAMsB,KAAKX,UAGcU,CAAoCK,KDM9DN,CAGbtB","file":"static/js/4.6abbc8d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","import React from 'react';\nimport s from './../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path = \"/dialogs/\" + props.id;\n\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import React from 'react';\nimport s from './../Dialogs.module.css';\n\nconst Message = (props) => {\n    return (\n        <div className={s.dialog}>{props.message}</div>\n    )\n}\n\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport React from \"react\";\n\nconst maxLength50 = maxLengthCreator(50)\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       validate={[required, maxLength50]}\n                       name=\"newMessageBody\"\n                       placeholder=\"Enter your message\"/>\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\n\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);","import React from 'react';\nimport s from './Dialogs.module.css';\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    let newPostElement = React.createRef();\n\n    let addPost = () => {\n\n        let text = newPostElement.current.value;\n        alert(text);\n    }\n\n\n    let dialogsElements = state.dialogs\n        .map(dialog => <DialogItem name={dialog.name} id={dialog.id}/>);\n\n\n    let messagesElements = state.messages\n        .map(message => <Message message={message.message}/>);\n\n    let newMessageBody = state.newMessageBody;\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    }\n\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\n\n    return (\n        <div>\n            <div className={s.dialogs}>\n                <div className={s.dialogsItems}>\n                    {dialogsElements}\n                </div>\n                <div className={s.message}>\n                    <div>{messagesElements}</div>\n                </div>\n                <AddMessageForm onSubmit={addNewMessage}/>\n            </div>\n            <div>\n                <button onClick={addPost}>Add post</button>\n            </div>\n        </div>\n    )\n}\n\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\n\nexport default Dialogs;","import React from 'react';\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n        isAuth: state.auth.isAuth\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody));\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n\n            return <Component {...this.props}/>\n        }\n    }\n    let mapStateToPropsForRedirect = (state) => ({\n        isAuth: state.auth.isAuth\n    });\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n}"],"sourceRoot":""}